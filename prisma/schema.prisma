// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider   = "prisma-client-js"
  engineType = "library"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Proof {
  id             Int      @id @default(autoincrement())
  proposalId     Int
  bidId          Int?
  milestoneIndex Int?
  note           String?
  createdAt      DateTime @default(now())
  createdBy      String?

  files ProofFile[]

  @@index([proposalId, milestoneIndex])
  @@index([proposalId])
}

model ProofFile {
  id        Int      @id @default(autoincrement())
  proofId   Int
  url       String?
  cid       String?
  name      String?
  path      String?
  createdAt DateTime @default(now())

  proof Proof @relation(fields: [proofId], references: [id], onDelete: Cascade)

  @@index([proofId])
}

/**
 * ✅ Dispute / Change Request records
 * (Admin ↔ Vendor change-requests thread)
 */
model ProofChangeRequest {
  id             Int       @id @default(autoincrement())
  proposalId     Int
  milestoneIndex Int
  comment        String?
  checklist      Json? // e.g. ["Add site photos","Upload receipts"]
  status         String    @default("open") // "open" | "resolved"
  createdAt      DateTime  @default(now())
  resolvedAt     DateTime?

  // ⬇ back-relation for responses (fixes P1012)
  responses ProofChangeResponse[] @relation("CRtoResponses")

  @@index([proposalId, milestoneIndex])
  @@index([proposalId])
}

model ProofChangeResponse {
  id        Int      @id @default(autoincrement())
  requestId Int
  comment   String?
  filesJson Json? // optional JSON payload for attached files [{url,name,cid}]
  createdAt DateTime @default(now())
  createdBy String? // 'vendor' | 'admin'

  // ⬇ forward relation paired with ProofChangeRequest.responses
  request ProofChangeRequest @relation("CRtoResponses", fields: [requestId], references: [id], onDelete: Cascade)

  @@index([requestId])
}

/**
 * ✅ Milestone archive metadata for admin workflow
 * (used by /api/milestones/.../archive routes)
 */
model Milestone {
  id             Int @id @default(autoincrement())
  bidId          Int
  milestoneIndex Int

  archived      Boolean   @default(false)
  archivedAt    DateTime?
  archivedBy    Int?
  archiveReason String?

  @@unique([bidId, milestoneIndex], name: "bidId_milestoneIndex")
}

model Payout {
  id              Int      @id @default(autoincrement())
  bidId           Int
  milestoneIndex  Int
  amountUsd       Float
  status          String
  releasedAt      DateTime
  txHash          String?

  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}
